<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间,包含+SQL映射文件名-->
<mapper namespace="com.ablaze.mapper.UserInfoMapper">

    <resultMap id="userInfoResultMap" type="userInfo">
        <result column="id" property="uid"/>
        <result column="userName" property="uname"/>
        <result column="password" property="upass"/>
    </resultMap>
    <!--与ruseltMap冲突(表名与字段名不一致时)-->
    <!--    <sql id="userInfoColumns">id,userName,password</sql>-->

    <!--根据id查询-->
    <!--<select id="findUserInfoById" resultMap="userInfoResultMap">
        select *&lt;!&ndash;<include refid="userInfoColumns"></include>&ndash;&gt;
        from user_info
        where id = #{uid};
    </select>-->
    <!--单条件模糊查询(按名称)-->
    <!--        <select id="findUserInfoByName" resultMap="userInfoResultMap">
                select *
                from user_info
                where userName like #{uname}
            </select>-->
    <!--多条件模糊查询-->
    <select id="selectByCondition" resultMap="userInfoResultMap">
        select * from user_info
        <where>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="uname != null and uname != '' ">
                and userName like concat('%',#{uname},'%')
            </if>
            <if test="upass != null and upass != '' ">
                and password like concat('%',#{upass},'%')
            </if>
        </where>
    </select>

    <!--多条件模糊查询(姓名，性别）-->
    <!--动态SQL-if-->
    <select id="selectByNameAndSexWithIf" resultMap="userInfoResultMap">
        select * from user_info
        <where>
            <if test="uname != null and uname != '' ">
                and userName like concat('%',#{uname},'%')
            </if>
            <if test="sex != null and sex != '' ">
                and sex = #{sex}
            </if>
        </where>
    </select>
    <!--动态SQL choose when otherwise-->
    <select id="findUserInfoByNameAndSexWithChoose" resultMap="userInfoResultMap">
        select * from user_info
        <trim prefix="where" prefixOverrides="and">
            <choose>
                <when test="uname != null and uname != '' ">
                    and userName like concat('%',#{uname},'%')
                </when>
                <when test="sex != null and sex != '' ">
                    and sex = #{sex}
                </when>
                <otherwise>
                    and email is not null
                </otherwise>
            </choose>
        </trim>
    </select>

    <!--条件动态查询-->
    <select id="selectByConditionSingle" resultMap="userInfoResultMap">
        select *
        from user_info
        <where>
            <choose>
                <when test="status != null">
                    status = #{status}
                </when>
                <when test="uname != null and uname != ''">
                    and userName like concat('%',#{uname},'%')
                </when>
                <when test="upass != null and upass != '' ">
                    password like concat('%',#{upass},'%')
                </when>
            </choose>
        </where>
    </select>

    <!--动态SQL foreach-->
    <select id="findUserInfoForeach" resultMap="userInfoResultMap">
        select * from user_info
        where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </select>
    <!--动态排序-->
    <select id="findUserInfoOrderByColumn">
        select *
        from user_info
        order by ${uname} desc
    </select>

    <!--增-->
    <!--<insert id="addUserInfo" useGeneratedKeys="true" keyProperty="uid">
        insert into user_info (userName, password, realName, sex, address, email, regDate, status)
        VALUES (#{uname}, #{upass}, #{realName}, #{sex}, #{address}, #{email}, #{regDate}, #{status})
    </insert>-->

    <!--动态SQL if+set-->
<!--    <update id="updateUserInfo">
        update user_info
        <set>
            <if test="uname != null and uname != ''">
                userName = #{uname},
            </if>
            <if test="upass != null and upass != ''">
                password = #{upass},
            </if>
            <if test="realName != null and realName != ''">
                realName = #{realName},
            </if>
            <if test="sex != null and sex != ''">
                sex = #{sex},
            </if>
            <if test="address != null and address != ''">
                address = #{address},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="regDate != null">
                regDate = #{regDate},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
        </set>
        where id = #{uid}
    </update>
 -->
    <!--改-->
    <!--<update id="updateUserInfo">
        update user_info
        <trim prefix="set" suffixOverrides=",">
            <if test="uname != null and uname != ''">
                userName = #{uname},
            </if>
            <if test="upass != null and upass != ''">
                password = #{upass},
            </if>
            <if test="realName != null and realName != ''">
                realName = #{realName},
            </if>
            <if test="sex != null and sex != ''">
                sex = #{sex},
            </if>
            <if test="address != null and address != ''">
                address = #{address},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="regDate != null">
                regDate = #{regDate},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
        </trim>
        where id = #{uid}
    </update>-->

    <!--删除-->
    <!--
        <delete id="deleteUserInfoById">
            delete
            from user_info
            where id = #{uid}
        </delete>
    -->

</mapper>